How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Viewing the differences between two versions of a file can help me see
the changes, for good or for bad, loacate the undesired ones and remove them.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

You can correct mistakes introduced in the code. Return to previous code states 
before they broke.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Pros: More flexible, adjustable, and precise.
Cons: More prone to errors. May be forgotten. Automatic is more simple.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

It depends on the scope of each application. Programming related versioning is better
to have multiple file commits as the changes spread in many files.

How can you use the commands git log and git diff to view the history of files?

Use git log to navigate through commits nad diff to view the differences between 
selected commits.

How might using version control make you more confident to make changes that
could break something?

Version control helps you restore the code to previous states where the error was 
not yet introduced.

Now that you have your workspace set up, what do you want to try using Git for?
Create a project and test it.
